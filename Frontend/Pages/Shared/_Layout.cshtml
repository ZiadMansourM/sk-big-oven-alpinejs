<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="This is a temp project">
    <meta name="author" content="Ziad Mansour Mohamed SREboy.com">
    <title>BigOven - @ViewData["Title"]</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/Frontend.styles.css" asp-append-version="true" />
    <script defer src="https://unpkg.com/alpinejs@3.x.x/dist/cdn.min.js"></script>
    <style>
        /* [14]: x-cloak */
        [x-cloak] {
            display: none !important;
        }
    </style>
</head>
<body class="bg-dark text-center text-white">
    <div 
        class="container d-flex flex-column min-vh-100 p-3"
        x-data="state()"
        x-init="loadCategories()"
    >
        <nav class="navbar navbar-expand-md navbar-dark">
            <div class="col text-start">
                <h3>👨‍🍳 BigOven</h3>
            </div>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse justify-content-end" id="navbarNav">
                <ul class="navbar-nav">
                    <li class="nav-item">
                        <a 
                            class="nav-link"
                            x-on:click="open='home'"
                            x-bind:class="open=='home'?'active':''"
                        >
                            Home
                        </a>
                    </li>
                    <li class="nav-item">
                        <a 
                            class="nav-link"
                            x-on:click="open='recipes'"
                            x-bind:class="open=='recipes'?'active':''"
                        >
                            Recipes
                        </a>
                    </li>
                    <li class="nav-item">
                        <a 
                            class="nav-link"
                            x-on:click="open='categories'"
                            x-bind:class="open=='categories'?'active':''"
                        >
                            Categories
                        </a>
                    </li>
                </ul>
            </div>
        </nav>
        <main role="main" class="px-3 my-auto">
            @RenderBody()
        </main>

        <footer class="text-white-50">
            <p>&copy; <span x-text="new Date().getFullYear()"></span> <a href="https://www.SREboy.com/" class="text-white link">SREboy.com</a></p>
        </footer>

        <script>
            function state() {
                return {
                    open: 'home',
                    categories: [],
                    activeCategory: { id: '', name: '' },
                    loadCategories() {
                        fetch('http://localhost:5144/categories')
                            .then(res => res.json())
                            .then(categories => this.categories = categories)
                    },
                    createCategories() {
                        fetch('http://localhost:5144/categories', {
                            method: 'POST',
                            headers: { 
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify(this.activeCategory.name)
                        })
                        .then(response => {
                            if (response.ok)
                                return response.json();
                            throw new Error('Error ...');
                        })
                        .then(jsonResponse => this.categories.push(jsonResponse))
                        .catch(err => console.log(err));
                        this.cleanActiveCategory();
                    },
                    deleteCategory() {
                        fetch(`http://localhost:5144/categories/${this.activeCategory.id}`, {
                            method: 'DELETE',
                            headers: { 
                                'Content-Type': 'application/json'
                            }
                        })
                        .then(response => {
                            if (response.ok)
                                return response.json();
                            throw new Error('Error ...');
                        })
                        .then(jsonResponse => console.log(jsonResponse))
                        .catch(err => console.log(err));
                        var found = this.categories.find(category => { return category.id == this.activeCategory.id });
                        if(found)
                            this.categories.splice(this.categories.indexOf(found), 1);
                        this.cleanActiveCategory();
                    },
                    updateCategory() {
                        fetch(`http://localhost:5144/categories/${this.activeCategory.id}`, {
                            method: 'PUT',
                            headers: { 
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify(this.activeCategory)
                        })
                        .then(response => {
                            if (response.ok)
                                return response.json();
                            throw new Error('Error ...');
                        })
                        .then(jsonResponse => console.log(jsonResponse))
                        .catch(err => console.log(err));
                        var found = this.categories.find(category => { return category.id == this.activeCategory.id });
                        if(found)
                            this.categories.splice(this.categories.indexOf(found), 1, this.activeCategory);
                        this.cleanActiveCategory();
                    },
                    initActiveCategory(category) {
                        this.activeCategory.id=category.id; 
                        this.activeCategory.name=category.name;
                    },
                    cleanActiveCategory() { this.activeCategory={ id: '', name: '' } }
                }
            }
        </script>
        <script src="~/lib/jquery/dist/jquery.min.js"></script>
        <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
        <script src="~/js/site.js" asp-append-version="true"></script>

        @await RenderSectionAsync("Scripts", required: false)
    </div>
</body>
</html>